// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var CoffeePlugin;
    return CoffeePlugin = (function(_super) {

      __extends(CoffeePlugin, _super);

      function CoffeePlugin() {
        return CoffeePlugin.__super__.constructor.apply(this, arguments);
      }

      CoffeePlugin.prototype.name = 'coffee';

      CoffeePlugin.prototype.priority = 700;

      CoffeePlugin.prototype.render = function(opts, next) {
        var ck, coffee, content, html2ck, inExtension, js2coffee, outExtension, outputStream, templateData;
        inExtension = opts.inExtension, outExtension = opts.outExtension, templateData = opts.templateData, content = opts.content;
        if ((inExtension === 'coffeekup' || inExtension === 'coffeecup' || inExtension === 'ck') || (inExtension === 'coffee' && !(outExtension === 'js' || outExtension === 'css'))) {
          ck = require('coffeecup');
          opts.content = ck.render(content, templateData, this.config.coffeekup || {});
          return next();
        } else if (inExtension === 'html' && (outExtension === 'coffeekup' || outExtension === 'ck' || outExtension === 'coffee')) {
          html2ck = require('html2coffeekup');
          outputStream = {
            content: '',
            write: function(data) {
              return this.content += data;
            }
          };
          return html2ck.convert(content, outputStream, function(err) {
            if (err) {
              return next(err);
            }
            opts.content = outputStream.content;
            return next();
          });
        } else if (inExtension === 'coffee' && outExtension === 'js') {
          coffee = require('coffee-script');
          opts.content = coffee.compile(content);
          return next();
        } else if (inExtension === 'js' && outExtension === 'coffee') {
          js2coffee = require('js2coffee/lib/js2coffee.coffee');
          opts.content = js2coffee.build(content);
          return next();
        } else {
          return next();
        }
      };

      return CoffeePlugin;

    })(BasePlugin);
  };

}).call(this);

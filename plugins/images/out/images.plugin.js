// Generated by CoffeeScript 1.3.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  module.exports = function(BasePlugin) {
    var Images, fs, path, _;
    fs = require('fs');
    path = require('path');
    _ = require('underscore');
    return Images = (function(_super) {

      __extends(Images, _super);

      function Images() {
        return Images.__super__.constructor.apply(this, arguments);
      }

      Images.prototype.name = 'images';

      Images.prototype.render = function(opts, next) {
        var content, dirs, file, images, inExtension, name, outExtension, templateData;
        inExtension = opts.inExtension, outExtension = opts.outExtension, templateData = opts.templateData, content = opts.content, file = opts.file;
        if (outExtension === 'html') {
          name = file.basename;
          if (name != null) {
            if (!path.existsSync('./src/public/images/' + name)) {
              fs.mkdirSync('./src/public/images/' + name);
            }
            dirs = fs.readdirSync('./src/public/images/' + name);
            if (dirs[0] === '.DS_Store') {
              dirs = dirs.splice(1);
            }
            images = _.map(dirs, function(dir) {
              return '/images/' + name + '/' + dir;
            });
            document.set({
              images: images
            });
          }
        }
        return typeof next === "function" ? next() : void 0;
      };

      return Images;

    })(BasePlugin);
  };

}).call(this);
